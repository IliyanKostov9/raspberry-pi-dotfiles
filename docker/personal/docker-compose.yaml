services:
  db:
    image: postgres:13-alpine3.20
    # image: postgres:15-alpine3.22
    restart: unless-stopped
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - personal_postgres_volume:/var/lib/postgresql/data
    secrets:
      - postgres_db
      - postgres_username
      - postgres_password
    ports:
      - 5432:5432

  passbolt:
    image: passbolt/passbolt:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      APP_FULL_BASE_URL: ${PASSBOLT_APP_BASE_URL}
      DATASOURCES_DEFAULT_DRIVER: Cake\Database\Driver\Postgres
      DATASOURCES_DEFAULT_ENCODING: "utf8"
      DATASOURCES_DEFAULT_URL: ${PASSBOLT_DATASOURCE_URL}
      EMAIL_DEFAULT_FROM_NAME: "Passbolt"
      EMAIL_DEFAULT_FROM: ${PASSBOLT_EMAIL_DEFAULT_FROM}
      EMAIL_TRANSPORT_DEFAULT_HOST: ${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_HOST}
      EMAIL_TRANSPORT_DEFAULT_CLIENT: ${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_CLIENT}
      EMAIL_TRANSPORT_DEFAULT_PORT: ${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_PORT}
      EMAIL_TRANSPORT_DEFAULT_USERNAME: ${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_USERNAME}
      EMAIL_TRANSPORT_DEFAULT_PASSWORD: ${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_PASSWORD}
      EMAIL_TRANSPORT_DEFAULT_TLS: "true"

      PASSBOLT_SSL_FORCE: "false"
      PASSBOLT_PLUGINS_MFA_POLICIES_ENABLED: "true"
      PASSBOLT_REGISTRATION_PUBLIC: "false"
      PASSBOLT_SECURITY_SMTP_SETTINGS_ENDPOINTS_DISABLED: "false"
      # PASSBOLT_EMAIL_VALIDATE_MX: "true"
    volumes:
      - gpg_volume:/etc/passbolt/gpg
      - jwt_volume:/etc/passbolt/jwt

    secrets:
      - passbolt_app_base_url
      - passbolt_datasource_url
      - passbolt_email_default_from
      - passbolt_email_transport_default_host
      - passbolt_email_transport_default_client
      - passbolt_email_transport_default_port
      - passbolt_email_transport_default_username
      - passbolt_email_transport_default_password

    command:
      [
        "/usr/bin/wait-for.sh",
        "-t",
        "0",
        "db:5432",
        "--",
        "/docker-entrypoint.sh",
      ]

    labels:
      traefik.enable: "true"
      traefik.http.routers.passbolt-http.entrypoints: "web"
      traefik.http.routers.passbolt-http.rule: "Host(`${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_CLIENT}`)"
      traefik.http.routers.passbolt-http.middlewares: "SslHeader@file"
      traefik.http.routers.passbolt-https.middlewares: "SslHeader@file"
      traefik.http.routers.passbolt-https.entrypoints: "websecure"
      traefik.http.routers.passbolt-https.rule: "Host(`${PASSBOLT_EMAIL_TRANSPORT_DEFAULT_CLIENT}`)"
      traefik.http.routers.passbolt-https.tls: "true"
      traefik.http.routers.passbolt-https.tls.certresolver: "letsencrypt"

  traefik:
    image: traefik:2.6
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/traefik.yaml:ro
      - ./conf/:/etc/traefik/conf
      - ./shared/:/shared

  pihole:
    container_name: pi-hole
    network_mode: "host"
    image: pihole/pihole:latest
    profiles:
      - donotstart
    dns:
      - 1.1.1.1
    environment:
      TZ: "Europe/Paris"
      FTLCONF_dns_dnssec: true
      FTLCONF_DNSMASQ_USER: root
      FTLCONF_DHCP_rapid_commit: true
      FTLCONF_DHCP_ACTIVE: true
      FTLCONF_webserver_port: 8080
      FTLCONF_WEB_BIND_ADDR: "0.0.0.0"
      FTLCONF_REPLY_ADDR4: "192.168.1.99"
      FTLCONF_DHCP_START: "192.168.1.2"
      FTLCONF_DHCP_END: "192.168.1.100"
      FTLCONF_DHCP_ROUTER: "192.168.1.1"
      FTLCONF_dns_upstreams: "1.1.1.1;1.0.0.1"
      FTLCONF_WEBPASSWORD: ${PIHOLE_WEBPASSWORD}
      FTLCONF_webserver_api_password: ${PIHOLE_WEBPASSWORD}
      FTLCONF_dns_listeningMode: "all"
    volumes:
      - "web_data:/data/etc-pihole:/etc/pihole"
      - "web_data:/data/etc-dnsmasq.d:/etc/dnsmasq.d"

    secrets:
      - pihole_webpassword

    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

    labels:
      traefik.enable: "true"
      traefik.http.routers.pihole-http.entrypoints: "web"
      traefik.http.routers.pihole-http.rule: "Host(`192.168.1.99`)"
      traefik.http.services.pihole.loadbalancer.server.port: "80"

  syncthing:
    image: syncthing/syncthing:edge
    container_name: syncthing
    profiles:
      - donotstart
    hostname: syncthing-host
    environment:
      PUID: 1000
      PGID: 1000
    volumes:
      - "syncthing_data:/wherever/st-sync:/var/syncthing"
    network_mode: host
    restart: unless-stopped
    healthcheck:
      test: curl -fkLsS -n 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1
      interval: 1m
      timeout: 10s
      retries: 3

  squid:
    image: ubuntu/squid:6.10-24.10_edge
    profiles:
      - donotstart
    restart: always
    container_name: squid
    hostname: squid
    volumes:
      - "./config/squid.conf:/etc/squid/squid.conf"
      - "squid_cache:/var/spool/squid"
      - "squid_logs:/var/log/squid"
    ports:
      - 3128:3128

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    profiles:
      - donotstart
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    environment:
      DB_HOSTNAME: db
      UPLOAD_LOCATION: "/etc/library"
      DB_DATABASE_NAME: "immich"
      DB_USERNAME: ${POSTGRES_USERNAME}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      IMMICH_VERSION: "release"
      TZ: "Europe/Paris"
      IMMICH_ENV: "production"
      # IMMICH_MEDIA_LOCATION: ""
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - /etc/library:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "2283:2283"
    depends_on:
      - redis
      - db
    restart: always
    healthcheck:
      disable: false

  # immich-machine-learning:
  #   container_name: immich_machine_learning
  #   # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
  #   # Example tag: ${IMMICH_VERSION:-release}-cuda
  #   image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
  #   # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
  #   #   file: hwaccel.ml.yml
  #   #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
  #   volumes:
  #     - model-cache:/cache
  #   env_file:
  #     - .env
  #   restart: always
  #   healthcheck:
  #     disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fec42f399876eb6faf9e008570597741c87ff7662a54185593e74b09ce83d177
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  # database:
  #   container_name: immich_postgres
  #   image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
  #   environment:
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_DB: ${DB_DATABASE_NAME}
  #     POSTGRES_INITDB_ARGS: "--data-checksums"
  #     # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
  #     # DB_STORAGE_TYPE: 'HDD'
  #   volumes:
  #     # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
  #     - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
  #   restart: always

volumes:
  personal_postgres_volume:
  model-cache:
  gpg_volume:
  jwt_volume:
  web_data:
    name: pihole-data

secrets:
  passbolt_app_base_url:
    environment: "PASSBOLT_APP_BASE_URL"

  postgres_db:
    environment: "POSTGRES_DB"
  passbolt_datasource_url:
    environment: "PASSBOLT_DATASOURCE_URL"
  postgres_password:
    environment: "POSTGRES_PASSWORD"
  postgres_username:
    environment: "POSTGRES_USERNAME"

  passbolt_email_default_from:
    environment: "PASSBOLT_EMAIL_DEFAULT_FROM"
  passbolt_email_transport_default_password:
    environment: "PASSBOLT_EMAIL_TRANSPORT_DEFAULT_PASSWORD"
  passbolt_email_transport_default_username:
    environment: "PASSBOLT_EMAIL_TRANSPORT_DEFAULT_USERNAME"
  passbolt_email_transport_default_host:
    environment: "PASSBOLT_EMAIL_TRANSPORT_DEFAULT_HOST"
  passbolt_email_transport_default_client:
    environment: "PASSBOLT_EMAIL_TRANSPORT_DEFAULT_CLIENT"
  passbolt_email_transport_default_port:
    environment: "PASSBOLT_EMAIL_TRANSPORT_DEFAULT_PORT"

  pihole_webpassword:
    environment: "PIHOLE_WEBPASSWORD"
